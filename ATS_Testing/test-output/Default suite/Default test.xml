<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="SSLTP11229" failures="0" tests="6" name="Default test" time="10.008" errors="0" timestamp="2023-04-06T16:10:23 IST">
  <testcase classname="report.AtsReport" name="@BeforeMethod beforeMethodClass" time="7.743">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: session not created: No matching capabilities found
Build info: version: &amp;apos;4.1.4&amp;apos;, revision: &amp;apos;535d840ee2&amp;apos;
System info: host: &amp;apos;SSLTP11229&amp;apos;, ip: &amp;apos;192.168.1.108&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: No matching capabilities found
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'SSLTP11229', ip: '192.168.1.108', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:164)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:118)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:106)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:86)
at report.AtsReport.beforeMethodClass(AtsReport.java:74)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethodClass -->
  <testcase classname="report.AtsReport" name="@BeforeMethod beforeMethodClass" time="-1.680777622983E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethodClass -->
  <testcase classname="report.AtsReport" name="@BeforeMethod beforeMethodClass" time="-1.680777623034E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethodClass -->
  <testcase classname="report.AtsReport" name="@BeforeMethod beforeMethodClass" time="-1.680777623062E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethodClass -->
  <testcase classname="report.AtsReport" name="@BeforeMethod beforeMethodClass" time="-1.6807776231E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethodClass -->
  <testcase classname="report.AtsReport" name="@BeforeMethod beforeMethodClass" time="-1.680777623124E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethodClass -->
  <testcase classname="report.AtsReport" name="@AfterTest endReport" time="-1.680777623164E9">
    <skipped/>
  </testcase> <!-- @AfterTest endReport -->
  <testcase classname="report.AtsReport" name="loginTest" time="0.0">
    <skipped/>
  </testcase> <!-- loginTest -->
  <testcase classname="report.AtsReport" name="employeeDetailsTest" time="0.0">
    <skipped/>
  </testcase> <!-- employeeDetailsTest -->
  <testcase classname="report.AtsReport" name="addEmployeeTest" time="0.0">
    <skipped/>
  </testcase> <!-- addEmployeeTest -->
  <testcase classname="report.AtsReport" name="addCandidateTest" time="0.0">
    <skipped/>
  </testcase> <!-- addCandidateTest -->
  <testcase classname="report.AtsReport" name="addDemandTest" time="0.0">
    <skipped/>
  </testcase> <!-- addDemandTest -->
  <testcase classname="report.AtsReport" name="demandListTest" time="0.0">
    <skipped/>
  </testcase> <!-- demandListTest -->
</testsuite> <!-- Default test -->
